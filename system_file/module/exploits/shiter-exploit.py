import os

class ToolManager:
    def __init__(self):
        self.tools = {}

    def add_tool(self, name, script_path, description):
        self.tools[name] = {'script_path': script_path, 'description': description}

    def list_tools(self):
        print("\nAvailable tools:")
        print("----------------")
        for name, data in self.tools.items():
            print(f"{name}: {data['description']}")

    def execute_tool(self, name, args):
        tool = self.tools.get(name)
        if tool:
            script_path = tool['script_path']
            command = f"python {script_path} {args}"
            os.system(command)
        else:
            print(f"Tool '{name}' not found.")

def clear_screen():
    os.system('cls' if os.name == 'nt' else 'clear')

def main():
    clear_screen()
    shiter_path = os.path.dirname(os.path.abspath(__file__))
    os.chdir(shiter_path)
    tool_manager = ToolManager()
    tool_manager.add_tool("AssetExploder", os.path.join("AssetExploder", "asset-exploder.py"), "AssetExploder tool")
    tool_manager.add_tool("CrunchRATPoison", os.path.join("CrunchRATPoison", "pwn.py"), "CrunchRATPoison tool")
    tool_manager.add_tool("Delusions", os.path.join("delusions", "delusions.py"), "Delusions tool")
    tool_manager.add_tool("DiamondFox", os.path.join("DiamondFox", "diamondpwn.py"), "DiamondFox tool")
    tool_manager.add_tool("DLoser", os.path.join("dloser", "dloser.py"), "DLoser tool")
    tool_manager.add_tool("DoubtfullyMalignant", os.path.join("DoubtfullyMalignant", "DoubtfullyMalignant.py"), "DoubtfullyMalignant tool")
    tool_manager.add_tool("Droppleganger", os.path.join("droppleganger", "droppleganger.py"), "Droppleganger tool")
    tool_manager.add_tool("ElasticSearch", os.path.join("ElasticSearch", "elastic_shell.py"), "ElasticSearch tool")
    tool_manager.add_tool("FreeACS-Pwn", os.path.join("FreeACS-Pwn", "freeacs-pwn.py"), "FreeACS-Pwn tool")
    tool_manager.add_tool("Hydrapwn", os.path.join("hydrapwn", "hydrapwn.py"), "Hydrapwn tool")
    tool_manager.add_tool("IISLap", os.path.join("iislap", "iislap.py"), "IISLap tool")
    tool_manager.add_tool("Joomblah", os.path.join("Joomblah", "joomblah.py"), "Joomblah tool")
    tool_manager.add_tool("Joomraa", os.path.join("Joomraa", "joomraa.py"), "Joomraa tool")
    tool_manager.add_tool("LotusCMS", os.path.join("LotusCMS", "lucky_lotus.py"), "LotusCMS tool")
    tool_manager.add_tool("NMediaPwn", os.path.join("nmediapwn", "nmediapwn.py"), "NMediaPwn tool")
    tool_manager.add_tool("PhpMoAdmin", os.path.join("phpMoAdmin", "moadmin.py"), "PhpMoAdmin tool")
    tool_manager.add_tool("Pisspoorpool", os.path.join("pisspoorpool", "p2pool-nodestats-lfd.py"), "Pisspoorpool tool")
    tool_manager.add_tool("Procurvy", os.path.join("procurvy", "leak_config_dm.py"), "Procurvy tool")
    tool_manager.add_tool("Pwnflow", os.path.join("pwnflow", "pwnflow.py"), "Pwnflow tool")
    tool_manager.add_tool("Se0wned", os.path.join("se0wned", "se0wn.py"), "Se0wned tool")
    tool_manager.add_tool("Shellshock", os.path.join("shellshock", "http_cgi_shellshock.py"), "Shellshock tool")
    tool_manager.add_tool("Suiteracer", os.path.join("suiteracer", "suiteracer.py"), "Suiteracer tool")
    tool_manager.add_tool("Suiteshell", os.path.join("suiteshell", "suiteshell.py"), "Suiteshell tool")
    tool_manager.add_tool("TorCT-Shell", os.path.join("TorCT-Shell", "torct-pwn.py"), "TorCT-Shell tool")
    tool_manager.add_tool("TotallyNotARCE", os.path.join("TotallyNotARCE", "totallynotarce.py"), "TotallyNotARCE tool")
    tool_manager.add_tool("Tr-06fail", os.path.join("tr-06fail", "tr-06fail-ssh-d1000.py"), "Tr-06fail tool")
    tool_manager.add_tool("VBullshit", os.path.join("vBullshit", "vBullshit.py"), "VBullshit tool")
    tool_manager.add_tool("Wipgpwn", os.path.join("wipgpwn", "wipg-exploit.py"), "Wipgpwn tool")
    tool_manager.add_tool("Wpsh0pwn", os.path.join("wpsh0pwn", "wpsh0pwn.py"), "Wpsh0pwn tool")
    tool_manager.add_tool("Xanity-Shell", os.path.join("Xanity-Shell", "xanity-pwn.py"), "Xanity-Shell tool")

    while True:
        command_input = input("Shiter exploits>> ").strip()
        if command_input.lower() == "help":
            tool_manager.list_tools()
        elif command_input.lower() == 'exit':
            exit()
        else:
            parts = command_input.split(maxsplit=1)
            if len(parts) > 0:
                tool_name = parts[0].strip()
                args = parts[1] if len(parts) > 1 else ""
            else:
                continue  # Ignore empty input and continue the loop
            tool_manager.execute_tool(tool_name, args)


if __name__ == "__main__":
    main()
